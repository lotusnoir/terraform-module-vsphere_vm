---
stages:
  - validate
  - push

variables:
  GITHUB_USER: lotusnoir
  PROJECT: terraform-module-vsphere_vm

##################################################
terraform-validation:
  stage: validate
  image:
    name: hashicorp/terraform
    entrypoint:
      - "/usr/bin/env"
      - "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
  rules:
    - if: $CI_PIPELINE_SOURCE == "push"
  script:
    - echo "Validating Terraform templates"
    - terraform --version
    - terraform init
    - terraform validate .

##################################################
push_src_on_github:
  stage: push
  image: alpine:latest
  before_script:
    - apk add git openssh-client
    - eval $(ssh-agent -s)
    - echo "${GITHUB_USER_PRIVATE_KEY}" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - echo -e "Host *\n\tUser ansible\n\tStrictHostKeyChecking no\n\tForwardAgent yes\n\n" > ~/.ssh/config
    - git config --global user.email "${GITHUB_USER_EMAIL}"
    - git config --global user.name "${GITHUB_USER}"
    - git config --global init.defaultBranch main
    - COMMENT=$(git log -1 --pretty=%B | head -1)
  script:
    - git clone git@github.com:${GITHUB_USER}/${PROJECT}.git /tmp/${PROJECT}
    - find /tmp/${PROJECT} -mindepth 1 -maxdepth 1 ! -name '.git' -exec rm -rf "{}" +;
    - rm -rf .git
    - cp -r . /tmp/${PROJECT}
    - cd /tmp/${PROJECT}
    - git add -A
    - git commit -m "${COMMENT}" || echo "No changes, nothing to commit!"
    - git push --follow-tags
